- parse .obj files
	+ handle faces with different types of indices
		+ parse out the separate indices when applicable
		+ merge the 3 types of indices to 1 list of indices
	+ handle faces with more than 3 indices
	- handle invalid formatting
		+ too little arguments (< 3) on v, vn and f, and (< 2) on vt
		+ too many arguments (> 3) on v and vn, and (> 2) on vt
		+ index out of range
	- parse o
	- parse mtllib
	+ parse vn
		+ add vn to final vertex vector
	+ parse vt
		+ add vt to final vertex vector
	+ center object

- handle render objects differently if they have normals/uvs or not
	- create different shader
	- create different vbo/vao

+ improve input processing
	+ implement key class for easier input processing
	+ print out controls
	+ implement moving the object around
	+ implement scaling the object
	+ separate wireframe and texture key

+ implement texture
	+ add smooth transition
		+ add variable to fragment shader
	+ correctly apply texture to 42.obj (kinda)
	+ accept bmp files with RGBA format

+ organize/refactor
	+ implement texture class
		+ replace old texture code

	+ give classes default constructors

+ implement resource manager

+ implement camera
	+ implement lookat function
	+ add camera controls to print out

- parse .mtl files
	- open file from filename in .obj file
	- implement different materials in shader

- add config file
	- define path to resources
	- define object file to load
		- define multiple object files
	- define texture to load
		- define multiple texture files
	? rotation speed/direction
	? scale
	? object location
	? FOV
	? light source

+ create state struct/class that stores render settings

+ add input processing to object class
	+ add position
	+ add scale

- documentation
	- add comments to code
	- create readme

+ add deltatime
+ implement perspective matrix
+ add aspect ratio to perspective matrix